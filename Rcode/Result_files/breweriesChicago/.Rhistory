install.packages(c("BH", "broom", "devtools", "dplyr", "evaluate", "fields", "formatR", "geepack", "geosphere", "git2r", "highr", "httr", "jsonlite", "knitr", "lazyeval", "lme4", "MCMCpack", "mime", "miniCRAN", "nlme", "plyr", "psych", "quantreg", "RcppArmadillo", "rgdal", "rgeos", "rmarkdown", "rstudioapi", "rvest", "slam", "sp", "spatstat", "spdep", "survival", "tidyr", "useful", "VGAM", "WikidataR", "WikipediR", "withr", "XLConnect", "XLConnectJars", "xml2", "Zelig", "zoo"))
source("00-course-setup.r")
source("00-course-setup.r")
source("00-course-setup.r")
source("00-course-setup.r")
wd <- ("data/breweriesGermany")
dir.create(wd)
wd <- getwd()
url <- "http://www.brewerymap.com/"
browseURL(url)
url <- "http://www.brewerymap.com/#t=s&a=chicago&r=10"
content <- html(url, encoding = "utf8")
content <- read_html(url, encoding = "utf8")
anchors <- html_nodes(content, css = ".resultEntryName")
breweries <- html_text(anchors)
breweries
anchors
html_nodes
anchors <- html_nodes(content, css = "#block-yui_3_17_2_8_1438187725105_11398 p")
url <- "http://thehopreview.com/blog/chicago-brewery-list"
content <- read_html(url, encoding = "utf8")
url <- "https://www.google.de/?q=list+breweries+chicago"
browseURL(url)
url <- "https://www.google.de/?#q=list+breweries+chicago"
browseURL(url)
url <- "http://thehopreview.com/blog/chicago-brewery-list"
content <- read_html(url, encoding = "utf8")
anchors <- html_nodes(content, css = "#block-yui_3_17_2_8_1438187725105_11398 p")
breweries <- html_text(anchors)
breweries
length(breweries)
breweries[1] <- NULL
breweries <- html_text(anchors)
length(breweries)
head(breweries)
breweries <- breweries[-1]
breweries
tempwd <- ("data/breweriesChicago")
dir.create(tempwd)
setwd(tempwd)
if (!file.exists("breweries_geo.RData")){
pos <- geocode(breweries)
geocodeQueryCheck()
save(pos, file="breweries_geo.RData")
} else {
load("breweries_geo.RData")
}
head(pos)
breweries
locations <- str_extract(breweries, [[:digit:]].+–?)
locations <- str_extract(breweries, "[[:digit:]].+–?")
locations
locations <- str_extract(breweries, "[[:digit:]].+–?")
locations
locations <- str_extract(breweries, "[[:digit:]].+?–")
locations
locations <- str_replace(locations, "–", "Chicago, IL")
locations
locations <- str_replace(locations, "–", ", Chicago, IL")
if (!file.exists("breweries_geo.RData")){
pos <- geocode(locations)
geocodeQueryCheck()
save(pos, file="breweries_geo.RData")
} else {
load("breweries_geo.RData")
}
head(pos)
pos
cbind(pos, locations)
locations <- str_extract(breweries, "[[:digit:]].+?–")
locations <- str_replace(locations, "–", ", Chicago, IL")
locations
?geocode
if (!file.exists("breweries_geo.RData")){
pos <- geocode(locations, source = "google")
geocodeQueryCheck()
save(pos, file="breweries_geo.RData")
} else {
load("breweries_geo.RData")
}
locations <- str_extract(breweries, "[[:digit:]].+?–")
locations <- str_replace(locations, "–", ", Chicago, IL")
locations
locations <- locations[!is.na(locations)]
locations
if (!file.exists("breweries_geo.RData")){
pos <- geocode(locations, source = "google")
geocodeQueryCheck()
save(pos, file="breweries_geo.RData")
} else {
load("breweries_geo.RData")
}
head(pos)
pos
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom=7, maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom=8, maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom=9, maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom=10, maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
?get_map
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom="auto", maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
brewery_map <- get_map(location=c(lon=mean(pos$lon), lat=mean(pos$lat)), zoom=12, maptype="hybrid")
p <- ggmap(brewery_map) + geom_point(data=pos, aes(x=lon, y=lat), col="red", size=3)
p
url <- "http://www.nytimes.com/"
url_parsed <- read_html(url)
class(url_parsed)
html_structure(url_parsed)
html_structure(url_parsed)
?as_list
as_list(url_parsed)
xml_children(url_parsed)
xml_children(url_parsed[[2]])
xml_children(url_parsed)[[2]]
xml_children(url_parsed)[[2]] %>% xml_contents()
headings <- html_nodes(url_parsed, css = ".story-heading a")
headings
url_parsed <- read_html(url)
headings <- html_nodes(url_parsed, css = ".story-heading a")
xpath <- '//*[contains(concat( " ", @class, " " ), concat( " ", "story-heading", " " ))]//a'
foo <- html_nodes(url_parsed, xpath = xpath)
url
url_parsed <- read_html(url)
headings <- html_nodes(url_parsed, css = ".story-heading a")
headings <- html_nodes(url_parsed, css = "#main a")
headings <- html_nodes(url_parsed, css = "#main")
html_structure(url_parsed)
as_list(url_parsed)
print(url_parsed)
url_parsed[[2]]
url_parsed[2]
xml_children(url_parsed)[[2]]
headings <- html_nodes(url_parsed, css = ".h3")
headings <- html_nodes(url_parsed, css = ".h3 a")
headings <- html_nodes(url_parsed, css = "..aColumn a")
headings <- html_nodes(url_parsed, css = ".aColumn a")
url <- "https://www.buzzfeed.com/?country=us"
url_parsed <- read_html(url)
headings <- html_nodes(url_parsed, css = ".lede__link")
headings
headings_nodes <- html_nodes(url_parsed, css = ".lede__link")
headings <- html_text(headings_nodes)
headings
headings <- str_replace_all(headings, "\\n", "")
headings
headings <- str_replace_all(headings, "\\n", "") %>% str_trim()
headings
vignette("selectorgadget")
# prepare data frame with varnames to be used in tables and models
varnames <- c("distance", "election", "visit_10km", "l_p_nsdap", "wbht", "wbht2", "wbht3", "lwb", "members_perc", "memberst", "wkr_comp_curr", "wkr_comp_last", "wkv_comp_last", "airfields_dist_min100km", "l_visit_10km", "visit_10km_nomatch", "l_visit_10km_comm", "l_p_nsdap_comm", "l_p_turnout_comm", "l_p_hitl", "goebbels_10km", "goebbels_10kmTRUE", "goebbels_10kmFALSE", "time", "airfields_dist_min100kmXtime", "exposure")
varnames_long <- c("Propensity score", "Election", "Visit within 10km", "NSDAP vote share, t-1 ", "Number of eligibles in 100,000 ", "Number of eligibles in 100,000, squared", "Number of eligibles in 100,000, cubic", "Log number of eligibles", "County share of NSDAP members in percent", "NSDAP members in 1,000", "Competitiveness 1", "Competitiveness 1, t-1", "Competitiveness 2, t-1", "Dist. to nearest airfield in 100km", "Visit within 10km, t-1 ", "Observation in no-matching zone", "Visit within 10km, t-1", "NSDAP vote share, t-1", "Turnout, t-1", "Hitler vote share, t-1", "Goebbels visit within 10km", "Goebbels visit within 10km", "No Goebbels visit within 10km", "Post exposure", "Dist. to nearest airfield in 100km X Post exposure", "Exposure, 10km")
varnames_tab <- data.frame("varnames" = varnames, "varnames_long" = varnames_long, "varnames_long_indented" = paste0("~~~",varnames_long), stringsAsFactors = FALSE)
# model preparation
covar_names <- c("time", "l_p_nsdap", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_noinstrument <- c("time", "l_p_nsdap", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht")
covar_names_pres <- c("time", "l_p_hitl", "memberst", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_pres_noinstrument <- c("time", "l_p_hitl", "memberst", "wbht")
covar_names_votesharekpd <- c("time", "l_p_kpd", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_noinstrument_votesharekpd <- c("time", "l_p_kpd", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht")
covar_names_pres_votesharekpd <- c("time", "l_p_thae", "memberst", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_pres_noinstrument_votesharekpd <- c("time", "l_p_thae", "memberst", "wbht")
covar_names_turnout <- c("time", "l_p_turnout", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_noinstrument_turnout <- c("time", "l_p_turnout", "memberst", "wkr_comp_last", "wkv_comp_last", "wbht")
covar_names_pres_turnout <- c("time", "l_p_turnout", "memberst", "wbht", "airfields_dist_min100km", "airfields_dist_min100kmXtime")
covar_names_pres_noinstrument_turnout <- c("time", "l_p_turnout", "memberst", "wbht")
model_2SLS_voteshare_formula <- paste("p_nsdap ~ ", paste(c("exposure + timeXexposure", covar_names_noinstrument), collapse=" + "), "|", paste(covar_names, collapse=" + "), sep = "") %>% as.formula
model_2SLS_voteshare_formula
